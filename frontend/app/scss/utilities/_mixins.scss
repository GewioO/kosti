///
/// Mixin which truncate text
///
@mixin truncate($width: auto){
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: $width;
}

///
/// Mixin which generates `top`/`right`/`bottom`/`left` properties
///
/// @param {String} $position - position property value
///
/// @param {List} $args [()] - `top`/`right`/`bottom`/`left` properties in a list type
///
@mixin position($position, $args: ()) {
    position: $position;

    $offsets: top right bottom left;

    @each $offset in $offsets {
        $index: index($args, $offset);

        @if $index {
            @if $index == length($args) {
                #{$offset}: 0;
            }

            @else {
                $next: nth($args, $index + 1);

                @if is-valid-length($next) {
                    #{$offset}: $next;
                }

                @else if index($offsets, $next) {
                    #{$offset}: 0;
                }

                @else {
                    @warn 'Invalid value #{$next} for offset #{$offset}';
                }
            }
        }
    }
}

///
/// Mixin for hiding element with `display: none` 
@mixin hidden {
    display: none !important;
}

.hidden {
    @include hidden();
}


///
/// Mixin for quantity notification
///

@mixin qty-notification ($selector) {
    @if $selector == wrapper {
        position: relative;
    }

    @if $selector == icon {
        @include position(absolute, bottom -10px right -5px)

        width: 18px;
        height: 18px;
        line-height: 18px;
        border-radius: 50%;
        background: $color-primary24;
        color: $color-primary1;
        text-align: center;
        font-size: rem(11);
        font-weight: bold;
        padding: 0 2px;
    }
}

///
/// Mixin for creating triangle, that is made from borders
///
/// @param {String} $dir [bottom] - triangle direction
///
/// @param {Number} $size [5px] - triangle size
///
/// @param {String} $br-color [ color(black01)] - triangle color
///

@mixin border-triangle($dir: bottom, $base_size: 5px, $size: 5px, $color: color(black01)) {
    border: $base_size solid transparent;

    @if ($dir == "top") {
        border-bottom-color: $color;
        border-top-width: 0;
        border-bottom-width: $size;
    } @else if ($dir == "right") {
        border-left-color: $color;
        border-left-width: 0;
        border-top-width: $size;
    } @else if ($dir == "bottom") {
        border-top-color: $color;
        border-bottom-width: 0;
        border-top-width: $size;
    } @else if ($dir == "left") {
        border-right-color: $color;
        border-left-width: 0;
        border-right-width: $size;
    }
}

///
/// Mixin for placeholders 
///

@mixin placeholder {
    ::-webkit-input-placeholder {@content}
    :-moz-placeholder           {@content}
    ::-moz-placeholder          {@content}
    :-ms-input-placeholder      {@content}  
}